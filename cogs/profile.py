import discord
from discord.ext import commands
import sqlite3

# K·∫øt n·ªëi DB
conn = sqlite3.connect('users.db')
c = conn.cursor()

# ƒê·∫£m b·∫£o b·∫£ng c√≥ ƒë·ªß c·ªôt
c.execute('''
    CREATE TABLE IF NOT EXISTS users (
        user_id TEXT PRIMARY KEY,
        username TEXT,
        balance INTEGER DEFAULT 1000,
        bank_balance INTEGER DEFAULT 0,
        last_daily REAL DEFAULT 0,
        level INTEGER DEFAULT 1,
        married_to TEXT DEFAULT NULL,
        profile_frame INTEGER DEFAULT NULL
    )
''')
conn.commit()

PROFILE_FRAMES = {
    401: {"name": "Blue Frame", "emoji": "üîµ"},
    402: {"name": "Red Frame", "emoji": "üî¥"},
    403: {"name": "Purple Frame", "emoji": "üü£"},
}

class Profile(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.Cog.listener()
    async def on_message(self, message):
        if message.author.bot:
            return

        content = message.content.strip().lower()
        if content.startswith("hprofile set frame") or content.startswith("h profile set frame"):
            args = content.split()
            if len(args) < 4:
                await message.channel.send("‚ùå D√πng ƒë√∫ng c√∫ ph√°p: `hprofile set frame <id>`")
                return
            try:
                frame_id = int(args[3])
                if frame_id not in PROFILE_FRAMES:
                    await message.channel.send("‚ùå ID khung kh√¥ng h·ª£p l·ªá.")
                    return
                user_id = str(message.author.id)
                c.execute("UPDATE users SET profile_frame = ? WHERE user_id = ?", (frame_id, user_id))
                conn.commit()
                await message.channel.send(f"‚úÖ ƒê√£ trang b·ªã khung: {PROFILE_FRAMES[frame_id]['emoji']} {PROFILE_FRAMES[frame_id]['name']}")
                return
            except ValueError:
                await message.channel.send("‚ùå ID ph·∫£i l√† s·ªë.")
                return

        if not (content.startswith("hprofile") or content.startswith("h profile")):
            return

        user_id = str(message.author.id)
        username = message.author.name

        # Truy v·∫•n user
        c.execute("SELECT balance, level, married_to, profile_frame FROM users WHERE user_id = ?", (user_id,))
        row = c.fetchone()

        if not row:
            await message.channel.send("‚ùå H·ªì s∆° c·ªßa b·∫°n ch∆∞a t·ªìn t·∫°i.")
            return

        balance, level, married_to, profile_frame = row
        spouse = f"<@{married_to}>" if married_to else "Ch∆∞a k·∫øt h√¥n"

        frame_emoji = PROFILE_FRAMES.get(profile_frame, {}).get("emoji", "üìò")
        frame_name = PROFILE_FRAMES.get(profile_frame, {}).get("name", "Kh√¥ng c√≥")

        embed = discord.Embed(
            title=f"{frame_emoji} H·ªì s∆° c·ªßa {username}",
            color=0x00FF00
        )
        embed.add_field(name="üí∞ S·ªë d∆∞", value=f"{balance}", inline=True)
        embed.add_field(name="üèÜ Level", value=str(level), inline=True)
        embed.add_field(name="üíç ƒê√£ k·∫øt h√¥n v·ªõi", value=spouse, inline=True)
        embed.add_field(name="üñºÔ∏è Khung h·ªì s∆°", value=f"{frame_name}", inline=True)
        embed.set_thumbnail(url=message.author.display_avatar.url)
        embed.set_footer(text="‚ù§Ô∏è C√≤n ƒë·ªôc th√¢n th√¨ c√≤n c∆° h·ªôi!")

        await message.channel.send(embed=embed)

# Setup Cog
async def setup(bot):
    await bot.add_cog(Profile(bot))
